name: Docker_Scout

on:  
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  trigger_pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Docker Pull postgres
        run: docker pull postgres

      - name: Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1
        with:
          command: cves,recommendations
          image: postgres
          ignore-unchanged: true
          only-severities: critical,high,medium,low
          only-fixed: false
          sarif-file: sarif-results.json
          summary: true

      - name: Verify SARIF File Exists
        run: |
          if [ ! -f sarif-results.json ]; then
            echo "SARIF file not found!"
            exit 1
          fi

      - name: Upload SARIF as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: sarif-results
          path: ./sarif-results.json
          if-no-files-found: error

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: |
          cd scripts
          npm install puppeteer adm-zip

      
      - name: Download SARIF ZIP Artifact
        uses: actions/download-artifact@v3
        with:
          name: sarif-results
          path: ./sarif-results.zip

      - name: Extract JSON from ZIP
        run: |
          unzip ./scripts/sarif-results.zip -d ./scripts/
          if [ ! -f /sarif-results.json ]; then
            echo "JSON file not found in ZIP!"
            exit 1
          fi
        shell: bash

      - name: Run CVE PDF Generation Script
        run: |
          cd scripts
          node generate_cve_pdf.js

      - name: Upload CVE Report PDF
        uses: actions/upload-artifact@v3
        with:
          name: docker-scout-cve-report
          path: ./scripts/docker_scout_cve_report.pdf
      # - name: Download ZIP Artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: sarif-results
      #     path: ./sarif-results.zip  # Save the downloaded ZIP

      # # - name: Generate Docker Scout JSON Results (Simulated)
      # #   run: |
      # #     echo '[{ "id": "CVE-2021-1234", "severity": "High", "description": "Critical vulnerability in xyz", "package": "xyz" }, { "id": "CVE-2022-5678", "severity": "Medium", "description": "Issue in abc component", "package": "abc" }]' > sarif-results.json

      # - name: Run CVE PDF Generation Script
      #   run: |
      #     cd scripts
      #     node generate_cve_pdf.js

      # - name: Upload CVE Report PDF
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: docker-scout-cve-report
      #     path: docker_scout_cve_report.pdf
      #     if-no-files-found: error
